<?xml version="1.0" encoding="utf-8"?>
<chapter version="5.0" xml:lang="zh-CN" xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns5="http://www.w3.org/2000/svg"
         xmlns:ns4="http://www.w3.org/1999/xhtml"
         xmlns:ns3="http://www.w3.org/1998/Math/MathML"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>PLT.2 Overview</title>

  <para>。。。</para>

  <section>
    <title>PLT.2.1 What is a Portal?什么是Portal</title>

    <para>A portal is a web based application that –commonly- provides
    personalization, authentication, content aggregation from different
    sources and hosts the presentation layer of information systems.
    Aggregation is the action of integrating content from different sources
    within a web page. A portal may have sophisticated personalization
    features to provide customized content to users. Portal pages may have
    different set of portlets creating content for different users.</para>
  </section>

  <section>
    <title>PLT.2.2 What is a Portlet?什么是Portlet</title>

    <para>A portlet is an application that provides a specific piece of
    content (information or service) to be included as part of a portal page.
    It is managed by a portlet container, that processes requests and
    generates dynamic content. Portlets are used by portals as pluggable user
    interface components that provide a presentation layer to information
    systems.</para>

    <para>The content generated by a portlet is also called a fragment. A
    fragment is a piece of markup (e.g. HTML, XHTML, WML) adhering to certain
    rules and can be aggregated with other fragments to form a complete
    document. The content of a portlet is normally aggregated with the content
    of other portlets to form the portal page. The lifecycle of a portlet is
    managed by the portlet container.</para>

    <para>Web clients interact with portlets via a request/response paradigm
    implemented by the portal. Normally, users interact with content produced
    by portlets, for example by following links or submitting forms, resulting
    in portlet actions being received by the portal, which are forwarded by it
    to the portlets targeted by the user's interactions.</para>

    <para>The content generated by a portlet may vary from one user to another
    depending on the user configuration for the portlet.</para>

    <para>This specification will deal with Portlets as Java technology based
    web components.</para>
  </section>

  <section>
    <title>PLT.2.3 What is a Portlet Container?什么是Portlet容器</title>

    <para>A portlet container runs portlets and provides them with the
    required runtime environment. A portlet container contains portlets and
    manages their lifecycle. It also provides persistent storage for portlet
    preferences. A portlet container receives requests from the portal to
    execute requests on the portlets hosted by it.</para>

    <para>A portlet container is not responsible for aggregating the content
    produced by the portlets. It is the responsibility of the portal to handle
    the aggregation.</para>

    <para>A portal and a portlet container can be built together as a single
    component of an application suite or as two separate components of a
    portal application.</para>
  </section>

  <section>
    <title>PLT.2.4 An Example 一个例子</title>

    <para>The following is a typical sequence of events, initiated when users
    access their portal page:</para>

    <para></para>

    <itemizedlist>
      <listitem>
        <para>A client (e.g., a web browser) after being authenticated makes
        an HTTP request to the portal</para>
      </listitem>

      <listitem>
        <para>The request is received by the portal</para>
      </listitem>

      <listitem>
        <para>The portal determines if the request contains an action targeted
        to any of the portlets associated with the portal page</para>
      </listitem>

      <listitem>
        <para>If there is an action targeted to a portlet, the portal requests
        the portlet container to invoke the portlet to process the
        action</para>
      </listitem>

      <listitem>
        <para>A portal invokes portlets, through the portlet container, to
        obtain content fragments that can be included in the resulting portal
        page</para>
      </listitem>

      <listitem>
        <para>The portal aggregates the output of the portlets in the portal
        page and sends the portal page back to the client</para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>PLT.2.5 Compatibility</title>

    <para>The Java Portlet Specification V 2.0 does not break binary
    compatibility with V 1.0. This means that all portlets written against the
    V 1.0 specification can run unchanged. Portlet V2.0 containers must
    support deploying JSR 168 portlets and the JSR 168 deployment 25
    descriptor. </para>

    <para>The only exceptions to this rule are:</para>

    <itemizedlist>
      <listitem>
        <para>RenderResponse.setContentType is no longer required before
        calling getWriter or getOutputstream. Calling getWriter or
        getOutputstream without previously setting the content type results no
        longer in an IllegalStateException in V 2.0.</para>
      </listitem>

      <listitem>
        <para>getProtocol for included servlets / JSPs no longer returns null,
        but ‘HTTP/1.1’ in V2.0.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>PLT.2.6 Major changes introduced with V 2.0</title>

    <para>The major new features of version 2.0 include:</para>

    <para></para>

    <itemizedlist>
      <listitem>
        <para>Events – enabling a portlet to send and receive events and
        perform state changes or send further events as a result of processing
        an event.</para>
      </listitem>

      <listitem>
        <para>Public render parameters – allowing portlets to share parameters
        with other portlets.</para>
      </listitem>

      <listitem>
        <para>Resource serving – provides the ability for a portlet to serve a
        resource.</para>
      </listitem>

      <listitem>
        <para>Portlet filter – allowing on-the-fly transformations of
        information in both the request to and the response from a
        portlet.</para>
      </listitem>
    </itemizedlist>

    <section>
      <title>PLT.2.6.1 Clarifications that may make V1.0 Portlets
      Non-compliant</title>

      <para>。。。</para>
    </section>

    <section>
      <title>PLT.2.6.2 Changes to the Programming Model</title>

      <para>。。。</para>
    </section>

    <section>
      <title>PLT.2.6.3 List of all Changes in the Specification</title>

      <para>。。。</para>
    </section>

    <section>
      <title>PLT.2.6.3 List of all Changes in the Specification</title>

      <para>。。。</para>
    </section>
  </section>

  <section>
    <title>PLT.2.7 Relationship with Java 2 Platform, Standard and Enterprise
    Edition</title>

    <para>。。。</para>
  </section>
</chapter>
