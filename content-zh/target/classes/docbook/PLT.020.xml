<?xml version='1.0' encoding="utf-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:lang="zh-CN"
	 xmlns:xlink="http://www.w3.org/1999/xlink"
	 xmlns:xi="http://www.w3.org/2001/XInclude">
	<title>PLT.20 Portlet过滤器</title>	
	<para>
		...
	</para>
	<section>
		<title>PLT.20.1 什么是portlet过滤器?</title>
			<para>
				...
			</para>
	</section>
	<section>
		<title>PLT.20.2 主要的概念</title>
			<para>
			...
			</para>
			<section>
				<title>过滤器生命周期</title>
					<para>
						...
					</para>
			</section>
			<section>
				<title>请求与回应的包装</title>
					<para>
						Central to the notion of filtering is the concept of wrapping a request or response in order
that it can override behavior to perform a filtering task. In this model, the developer has
the ability to override existing methods on the request and response objects. The portlet
should not add additional methods to the wrapper as further downstream wrappers may
not honor these. In order to support this style of filter the container must support the
following requirement. When a filter invokes the doFilter method on the portlet
container’s filter chain implementation, the container must ensure that the request and
response object that it passes to the next component in the filter chain, or to the target
portlet if the filter was the last in the chain, is the same object that was passed into the
doFilter method by the calling filter or one of the above mentioned wrappers. ccxcvi
					</para>
			</section>
			<section>
				<title>过滤器环境</title>
					<para>
						...
					</para>
			</section>
			<section>
				<title>Portlet应用中配置一个过滤器</title>
					<para>
						...
					</para>
			</section>
			<section>
				<title>定义一个过滤器目录的方法</title>
					<para>
						...
					</para>
			</section>
	</section>
		
		
</chapter>